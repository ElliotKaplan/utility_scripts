import sys

import aiohttp
import asyncio
from bs4 import BeautifulSoup, Comment

host = 'https://cvefeed.io/vuln/detail/'


async def main(cvelist):
    async with aiohttp.ClientSession() as sess:
        for cve in cvelist:
            async with sess.get(f'{host}{cve}') as resp:
                if resp.status != 200:
                    continue
                body = await resp.text()
                soup = BeautifulSoup(body, 'lxml')
                # get the cvss score. This is a kludge based on page data
                body = soup.find('div', attrs={'class': 'page-content'})
                button = body.find(attrs={'class': 'btn'})
                score = ' '.join(button.text.strip().split())
                for tag in soup.find_all(string=lambda text: isinstance(text, Comment)):
                    if 'Public Exploits' in tag:
                        break
                public_exploits = tag.find_next_sibling('div')
                refs = public_exploits.find_all('a')
                for ref in refs:
                    print(cve, score, ref.attrs['href'], sep='\t')


if __name__ == '__main__':
    from argparse import ArgumentParser, FileType

    parser = ArgumentParser('search cvefeed.io for public exploits')

    parser.add_argument('cves', nargs='+', default=sys.stdin, help='cves to search for exploits for')

    clargs = parser.parse_args()
    asyncio.run(main(clargs.cves))

